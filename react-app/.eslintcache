[{"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/index.tsx":"1","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/reportWebVitals.ts":"2","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/App.tsx":"3","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/TopBars.tsx":"4","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/createpost/createPost.tsx":"5","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/newsfeed/newsfeed.tsx":"6","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/userPost.tsx":"7"},{"size":510,"mtime":1608102991909,"results":"8","hashOfConfig":"9"},{"size":419,"mtime":1608109108414,"results":"10","hashOfConfig":"9"},{"size":1175,"mtime":1608120973719,"results":"11","hashOfConfig":"9"},{"size":3656,"mtime":1608120911131,"results":"12","hashOfConfig":"9"},{"size":2715,"mtime":1608109037890,"results":"13","hashOfConfig":"9"},{"size":1055,"mtime":1608111685226,"results":"14","hashOfConfig":"9"},{"size":1889,"mtime":1608111577085,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ginr4k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/index.tsx",[],[],"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/reportWebVitals.ts",[],"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/App.tsx",[],"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/TopBars.tsx",["34","35","36"],"import React, {useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faCameraRetro, faCog, faSearch, faStream } from \"@fortawesome/free-solid-svg-icons\";\nimport snapThatWhite from \"../images/snapthatWhite.png\";\nimport './TopBar.css';\n\ninterface TopBarProps {\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    text: string;\n    tabNames: string[];\n}\n\n// eslint-disable-next-line\nconst TopBar = ( props: TopBarProps ) => {\n\n    const snapthatWhiteLogo = snapThatWhite;\n\n    return (\n        <div>\n            <div className=\"top-area\">\n                <span className=\"user-menu\">\n                     <FontAwesomeIcon className=\"angle-down-icon\" icon={faAngleDown} />\n                     <div className=\"user-menu-text\">\n                         Hi, user\n                     </div>\n                </span>\n                <div>\n                    <span className=\"logo\">\n                        <img src={snapthatWhiteLogo} className=\"logo-white\" alt=\"logo\" />\n                    </span>\n                    <span className=\"title\">\n                        <h2 className=\"title-name\">\n                            SNAPTHAT\n                        </h2>\n                    </span>\n                </div>\n            </div>\n            <div className=\"menu-area\">\n                <button\n                    type=\"submit\"\n                    className=\"test-button\"\n                    onClick={props.onClick}\n                >\n                    <div className=\"menu-area-item\" style={{color: props.text === \"newsfeed\" ? 'black' : 'white'}}>\n                        <FontAwesomeIcon className=\"stream-icon\" icon={faStream} />\n                        <div className=\"menu-area-item-text\">\n                            {props.tabNames[0]}\n                        </div>\n                    </div>\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"test-button\"\n                    onClick={props.onClick}\n                >\n                    <div className=\"menu-area-item\" style={{color: props.text === \"search\" ? 'black' : 'white'}}>\n                        <FontAwesomeIcon className=\"search-icon\" icon={faSearch} />\n                        <div className=\"menu-area-item-text\">\n                            {props.tabNames[1]}\n                        </div>\n                    </div>\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"test-button\"\n                    onClick={props.onClick}\n                >\n                    <div className=\"menu-area-item\" style={{color: props.text === \"create\" ? 'black' : 'white'}}>\n                        <FontAwesomeIcon className=\"camera-retro-icon\" icon={faCameraRetro} />\n                        <div className=\"menu-area-item-text\">\n                            {props.tabNames[2]}\n                        </div>\n                    </div>\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"test-button\"\n                    onClick={props.onClick}\n                >\n                    <div className=\"menu-area-item\" style={{color: props.text === \"settings\" ? 'black' : 'white'}}>\n                        <FontAwesomeIcon className=\"cog-icon\" icon={faCog} />\n                        <div className=\"menu-area-item-text\">\n                            {props.tabNames[3]}\n                        </div>\n                    </div>\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default TopBar;\n","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/createpost/createPost.tsx",["37"],"import React, {useState} from \"react\";\nimport './createPost.css';\nimport dummyImage from \"../../images/dummyPostImage.png\";\n// import TextArea from \"../TextArea\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSave, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\n\n// eslint-disable-next-line\nconst CreatePost = () => {\n\n    const [titleText, setTitleText] = useState('test');\n\n    const handle = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setTitleText(event.target.value);\n    }\n\n    /* TODO: Make the post, should be of type user post\n    const thePost = ( title, img ) => {\n        return (\n            <div>\n                <img src={dummyImage} className=\"newsfeed-image\" alt=\"logo\"/>\n\n            </div>\n        )\n    }\n    */\n\n    return (\n        <div className=\"create-post\">\n            <div className=\"create-post-header\" >\n                 Create Post\n            </div>\n            {/* TODO: Create text area component*/}\n            <div className=\"create-post-card\">\n                <form className=\"create-post-title\">\n                    <textarea\n                        className=\"text-area-title\"\n                        placeholder=\"Post title\"\n                        onChange={event => {\n                            handle(event)\n                        }}\n                    />\n                </form>\n                <img src={dummyImage} className=\"create-post-image\" alt=\"logo\"/>\n                <div className=\"Choose-file\">\n                    Choose file...\n                </div>\n                <form className=\"create-post-caption\">\n                    <textarea\n                        className=\"text-area-caption\"\n                        placeholder=\"Caption\"\n                        onChange={event => {\n                            handle(event)\n                        }}\n                    />\n                </form>\n                <form className=\"create-post-channel\">\n                    <textarea\n                        className=\"text-area-channel\"\n                        placeholder=\"Channel\"\n                        onChange={event => {\n                            handle(event)\n                        }}\n                    />\n                </form>\n                <button className=\"create-post-create-button\">\n                    <FontAwesomeIcon className=\"save-icon\" icon={faSave} />\n                    Create\n                </button>\n                <button className=\"create-post-cancel-button\">\n                    <FontAwesomeIcon className=\"delete-icon\" icon={faTrashAlt} />\n                    Cancel\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreatePost;\n","/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/newsfeed/newsfeed.tsx",[],"/Users/williamthorenfeldt/Documents/snapthat/react-app/src/components/userPost.tsx",["38"],"import React from \"react\";\nimport './userPost.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowCircleDown, faArrowCircleUp, faComments} from \"@fortawesome/free-solid-svg-icons\";\nimport dummyImage from '../images/dummyPostImage.png';\nimport {Userposttype} from \"../types/userposttype\";\n\ninterface UserPostProp {\n    userPost: Userposttype;\n}\n\n// eslint-disable-next-line\nconst UserPost = (props: UserPostProp) => {\n\n    const { title, caption, image_path, score } = props.userPost;\n\n    // TODO: Change so it takes the correct images\n    const numberOfImagesToDisplay = 8;\n    const showImage = [...Array(numberOfImagesToDisplay)].map((image, index) =>\n        <div className=\"newsfeed-posts\" key={index}>\n            <img src={image_path} className=\"newsfeed-image\" alt=\"logo\"/>\n            <div className=\"newsfeed-post-text\">\n                <div className=\"post-title\">\n                    {title}\n                </div>\n                <div className=\"post-user\">\n                    @postUser\n                </div>\n                <div className=\"post-text\">\n                    {caption}\n                </div>\n                <div className=\"post-interact\">\n                    <div className=\"post-interact-vote\">\n                        {score}\n                        <FontAwesomeIcon className=\"arrow-circle-up-icon\" icon={faArrowCircleUp} />\n                        <FontAwesomeIcon className=\"arrow-circle-down-icon\" icon={faArrowCircleDown} />\n                    </div>\n                    <div className=\"post-interact-comment\">\n                        34\n                        <FontAwesomeIcon className=\"comments-icon\" icon={faComments} />\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n    return (\n        <div>\n            {showImage}\n        </div>\n        );\n}\n\nexport default UserPost;\n",{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":18},{"ruleId":"39","severity":1,"message":"43","line":46,"column":30,"nodeType":"41","messageId":"42","endLine":46,"endColumn":35},{"ruleId":"39","severity":1,"message":"43","line":60,"column":30,"nodeType":"41","messageId":"42","endLine":60,"endColumn":35},{"ruleId":"39","severity":1,"message":"44","line":11,"column":12,"nodeType":"41","messageId":"42","endLine":11,"endColumn":21},{"ruleId":"39","severity":1,"message":"45","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'CreatePost' is defined but never used.","Identifier","unusedVar","'event' is defined but never used.","'titleText' is assigned a value but never used.","'dummyImage' is defined but never used."]